// <auto-generated />
using System;
using GraphQLExample.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

namespace GraphQLExample.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    public class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GraphQLExample.Data.Entities.Case", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RepresentativeId")
                        .HasColumnType("int");

                    b.Property<bool>("Resolved")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("RepresentativeId");

                    b.ToTable("Case");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientId = 1,
                            CreatedAt = new DateTime(2021, 2, 22, 19, 34, 8, 531, DateTimeKind.Utc).AddTicks(7312),
                            Description = "360 No scoped by a blind raindeer",
                            Reference = "C-01",
                            RepresentativeId = 1,
                            Resolved = true
                        },
                        new
                        {
                            Id = 2,
                            ClientId = 2,
                            CreatedAt = new DateTime(2021, 2, 22, 19, 34, 8, 531, DateTimeKind.Utc).AddTicks(9411),
                            Description = "Crashed into colleagues car",
                            Reference = "C-02",
                            RepresentativeId = 2,
                            Resolved = true
                        },
                        new
                        {
                            Id = 3,
                            ClientId = 3,
                            CreatedAt = new DateTime(2021, 2, 22, 19, 34, 8, 531, DateTimeKind.Utc).AddTicks(9417),
                            Description = "Double drop kicked my dog on the chin",
                            Reference = "C-03",
                            RepresentativeId = 3,
                            Resolved = false
                        },
                        new
                        {
                            Id = 4,
                            ClientId = 4,
                            CreatedAt = new DateTime(2021, 2, 22, 19, 34, 8, 531, DateTimeKind.Utc).AddTicks(9419),
                            Description = "Egged my cat and ran over my friend's sheep",
                            Reference = "C-04",
                            RepresentativeId = 4,
                            Resolved = false
                        },
                        new
                        {
                            Id = 5,
                            ClientId = 5,
                            CreatedAt = new DateTime(2021, 2, 22, 19, 34, 8, 531, DateTimeKind.Utc).AddTicks(9420),
                            Description = "Set fire to my house whilst I slept in my car",
                            Reference = "C-05",
                            RepresentativeId = 5,
                            Resolved = false
                        });
                });

            modelBuilder.Entity("GraphQLExample.Data.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Client");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Beth Dawson"
                        },
                        new
                        {
                            Id = 2,
                            FullName = "David Smith"
                        },
                        new
                        {
                            Id = 3,
                            FullName = "Jack Dickson"
                        },
                        new
                        {
                            Id = 4,
                            FullName = "Joe Doe"
                        },
                        new
                        {
                            Id = 5,
                            FullName = "Juliet Anderson"
                        });
                });

            modelBuilder.Entity("GraphQLExample.Data.Entities.Representative", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Representative");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Richard Davidson"
                        },
                        new
                        {
                            Id = 2,
                            FullName = "Shaun Jackson"
                        },
                        new
                        {
                            Id = 3,
                            FullName = "David James"
                        },
                        new
                        {
                            Id = 4,
                            FullName = "Peter Ricks"
                        },
                        new
                        {
                            Id = 5,
                            FullName = "Emily Doe"
                        });
                });

            modelBuilder.Entity("GraphQLExample.Data.Entities.Case", b =>
                {
                    b.HasOne("GraphQLExample.Data.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GraphQLExample.Data.Entities.Representative", "Representative")
                        .WithMany()
                        .HasForeignKey("RepresentativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Representative");
                });
#pragma warning restore 612, 618
        }
    }
}
